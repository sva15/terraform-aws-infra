# Example Terraform Variables Configuration
# Copy this file to terraform.tfvars and update the values

# Environment Configuration
environment = "dev"
project_name = "IFRS-InsightGen"
aws_region = "ap-south-1"

# Network Configuration
vpc_name = "your-vpc-name"
subnet_names = ["your-private-subnet-1", "your-private-subnet-2"]
security_group_names = ["your-security-group"]
public_subnet_names = ["your-public-subnet"]

# UI Configuration
ui_s3_bucket = "your-ui-build-bucket"  # S3 bucket containing UI assets
ui_s3_key = "ui-builds/latest/"       # S3 folder path OR "build.zip" for zip file
ui_path = "ui"                        # Path where UI will be served (e.g., /ui/, /app/, /dashboard/)
BASE_URL = "https://api.yourdomain.com"  # Base URL for API calls (runtime environment variable)

# EC2 Configuration
instance_type = "t3.micro"
create_key_pair = true

# Database Configuration
deploy_database = true
postgres_db_name = "ifrs_dev"
postgres_user = "ifrs_user"
use_secrets_manager = true
pgadmin_email = "admin@yourdomain.com"
pgadmin_password = "your-secure-password"

# Lambda Layer Configuration
lambda_layer_mappings = {
  "alb-lambda" = ["alb-layer"]
  "sns-lambda" = ["sns-layer"]
  "db-restore" = ["lambda-deps-layer"]
  # Add more mappings as needed
  # "function_name" = ["layer1", "layer2"]
}

# Example usage scenarios:
# 
# 1. Default UI path (/ui/):
#    ui_path = "ui"
#    Access at: http://your-ec2-ip/ui/
#
# 2. Custom UI path (/app/):
#    ui_path = "app" 
#    Access at: http://your-ec2-ip/app/
#
# 3. Root path (/):
#    ui_path = ""
#    Access at: http://your-ec2-ip/
#
# 4. With API base URL:
#    base_url = "https://api.yourdomain.com"
#    This will be passed as BASE_URL environment variable to the container
